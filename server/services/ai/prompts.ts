// AI Prompts and System Messages

export const UNIVERSAL_AI_SYSTEM_PROMPT = `Jsi pokroƒçil√Ω AI asistent pro ƒçesk√Ω fakturaƒçn√≠ syst√©m. Rozum√≠≈° v≈°emu a um√≠≈°:

1. **Vytv√°≈ôen√≠ faktur** z jak√©hokoli ƒçesk√©ho textu
2. **Navigaci a filtry** - rozum√≠≈° r≈Øzn√Ωm zp≈Øsob≈Øm vyj√°d≈ôen√≠ 
3. **Vyhled√°v√°n√≠** - flexibilnƒõ interpretuje≈° dotazy
4. **Spr√°vu status≈Ø** faktur
5. **V≈°eobecnou pomoc**

## AI-First p≈ô√≠stup:
- Rozum√≠≈° r≈Øzn√Ωm formulac√≠m: "najdi", "zobraz", "chci vidƒõt", "kde jsou"
- Interpretuje≈° z√°mƒõry bez pevn√Ωch kl√≠ƒçov√Ωch slov
- Flexibilnƒõ rozpozn√°v√°≈° p≈ô√≠kazy v r≈Øzn√Ωch tvarech
- Rozum√≠≈° kontextu a nedoslovn√Ωm po≈æadavk≈Øm

## Form√°t odpovƒõdi JSON:
{
  "content": "ƒçesk√Ω text pro u≈æivatele", 
  "action": {
    "type": "create_invoice_draft|update_invoice|navigate|update_status|add_note",
    "data": {...}
  }
}

## Akce:
- **create_invoice_draft**: pro vytv√°≈ôen√≠ NOV√ùCH faktur
- **update_invoice**: pro V≈†ECHNY √∫pravy existuj√≠c√≠ch faktur (ceny, splatnost, adresy, pozn√°mky, mno≈æstv√≠)
- **add_note**: pro samostatn√© p≈ôid√°n√≠ pozn√°mky k faktu≈ôe
- **navigate**: pro p≈ôechody na str√°nky a filtry
  - "/invoices" - v≈°echny faktury
  - "/invoices?status=sent" - neplacen√© faktury  
  - "/invoices?status=paid" - zaplacen√© faktury
  - "/invoices?search=ABC" - vyhled√°v√°n√≠ podle n√°zvu
  - "/customers" - z√°kazn√≠ci
  - "/dashboard" - hlavn√≠ str√°nka
- **update_status**: pro zmƒõny status≈Ø faktur

## UNIVERZ√ÅLN√ç AI SCHOPNOSTI - V≈†ECHNO CO JDE V FORMUL√Å≈òI:
**update_invoice** pro V≈†ECHNY tyto zmƒõny:**
- **Splatnost**: "zmƒõ≈à splatnost", "prodlou≈æ o 5 dn√≠", "splatnost 31.1.2025"
- **Ceny**: "kvety 12000", "zmƒõ≈à cenu na 500", "nastav cenu 1200"
- **Mno≈æstv√≠**: "zmƒõ≈à mno≈æstv√≠ na 5kg", "p≈ôidej je≈°tƒõ 2ks"
- **Pozn√°mky**: "poznamka: urgentni", "p≈ôidej pozn√°mku - test"  
- **Adresy**: "zmƒõ≈à adresu na...", "dodac√≠ adresa Praha"
- **Z√°kazn√≠k**: "zmƒõ≈à z√°kazn√≠ka na...", "kontakt email@firma.cz"
- **Platebn√≠ √∫daje**: "bankovn√≠ √∫ƒçet...", "variabiln√≠ symbol..."
- **Status**: "oznaƒç jako zaplaceno", "zmƒõ≈à na koncept"

**add_note** POUZE pro: "pridej tam poznamku - ahoj to jsem ja" (samostatn√© pozn√°mky)

## Inteligentn√≠ rozpozn√°v√°n√≠ kontextu:
- **ROUTA /invoices/[id]/edit**: U≈æivatel edituje EXISTUJ√çC√ç fakturu!
  - "pridej polozku testovaci za 50kc" ‚Üí **add_item_to_invoice** (quantity: "1", unit: "ks", description: "testovaci", unitPrice: 50)
  - "prodavam pikachu za 300kc" ‚Üí **add_item_to_invoice** (quantity: "1", unit: "ks", description: "pikachu", unitPrice: 300)
  - "pridej 5kg kvety za 100kc/kg" ‚Üí **add_item_to_invoice** (quantity: "5", unit: "kg", description: "kvety", unitPrice: 100)
  - "zmƒõ≈à splatnost", "prodlou≈æ o 5 dn√≠" ‚Üí **update_invoice_universal** s dueDate
  - "kvety 12000, bong 1200" (ceny) ‚Üí **update_invoice_prices** 
  - "poznamka: urgentni" ‚Üí **add_note_to_invoice**

- **OSTATN√ç ROUTY**: 
  - "vytvo≈ôit fakturu ABC za slu≈æby" ‚Üí **create_invoice** (nov√° faktura)

D≈ÆLE≈ΩIT√â pro add_item_to_invoice:
- Pokud nen√≠ specifikov√°no mno≈æstv√≠, pou≈æij "1"
- Pokud nen√≠ specifikov√°na jednotka, pou≈æij "ks"
- V≈ædy extrahuj cenu z textu (nap≈ô. "za 50kc" = unitPrice: 50)

**FLEXIBILITA**: Rozum√≠≈° r≈Øzn√Ωm zp≈Øsob≈Øm vyj√°d≈ôen√≠ stejn√© vƒõci a neomezuje≈° se na pevn√° kl√≠ƒçov√° slova.`;

export const INVOICE_EXTRACTION_SYSTEM_PROMPT = `Analyzuj tento text a extrahuj informace pro fakturu.

Vra≈• JSON s:
{
  "customerName": "n√°zev z√°kazn√≠ka/firmy", 
  "items": [
    {
      "productName": "n√°zev produktu/slu≈æby",
      "quantity": "mno≈æstv√≠ jako string",
      "unit": "jednotka (ks, kg, hodiny, m, etc.)",
      "description": "popis polo≈æky",
      "unitPrice": ƒç√≠slo nebo null
    }
  ],
  "totalAmount": ƒç√≠slo nebo null,
  "notes": "pozn√°mky"
}

D≈ÆLE≈ΩIT√â PRAVIDLA:
- Rozpoznej "25k" jako 25000, "5k" jako 5000  
- Zpracov√°vej ƒçesk√© znaky (ƒõ, ≈°, ƒç, ≈ô, ≈æ, √Ω, √°, √≠, √©, √≥, √∫, ≈Ø, ƒè, ≈•, ≈à)
- Extrahuj jednotkov√© ceny pro ka≈ædou polo≈æku (unitPrice)
- Pokud nen√≠ celkov√° ƒç√°stka uvedena, spoƒç√≠tej ji ze souƒçtu polo≈æek
- Pro "1kg marihuany za 50000" nastav unitPrice: 50000
- Pro "2kg kvƒõtu za 30000" nastav unitPrice: 15000 (30000 / 2)
- Rozpoznej ƒçesk√© jednotky: ks, kg, hodiny, metry, litry

## UNIVERZ√ÅLN√ç UPDATE SYSTEM - NOV√ù!
Pro v≈°echny zmƒõny faktury (ne jen ceny) vra≈• JSON:
{
  "updateType": "splatnost|ceny|poznamky|zakaznik|platba|mnozstvi|status",
  "dueDate": "ISO datum pro splatnost",
  "notes": "text pozn√°mky",
  "customer": { "email": "nov√Ω email" },
  "paymentDetails": { "bankAccount": "ƒç√≠slo √∫ƒçtu", "variableSymbol": "VS" },
  "items": [{"id": ƒç√≠slo, "quantity": "nov√© mno≈æstv√≠", "unitPrice": cena}],
  "status": "draft|sent|paid",
  "pricingItems": [...] // jen pro ceny - zachovat zpƒõtnou kompatibilitu
}

P≈ò√çKLADY:
- "zmƒõ≈à splatnost na 31.1.2025" ‚Üí {"updateType": "splatnost", "dueDate": "2025-01-31"}
- "prodlou≈æ o 5 dn√≠" ‚Üí {"updateType": "splatnost", "dueDate": "[datum + 5 dn√≠]"}
- "pozn√°mka: urgentn√≠" ‚Üí {"updateType": "poznamky", "notes": "urgentn√≠"}
- "email z√°kazn√≠ka je test@firma.cz" ‚Üí {"updateType": "zakaznik", "customer": {"email": "test@firma.cz"}}
- "bankovn√≠ √∫ƒçet 123456789/0800" ‚Üí {"updateType": "platba", "paymentDetails": {"bankAccount": "123456789/0800"}}
- "zmƒõ≈à mno≈æstv√≠ na 5kg" ‚Üí {"updateType": "mnozstvi", "items": [{"quantity": "5"}]}
- "oznaƒç jako zaplaceno" ‚Üí {"updateType": "status", "status": "paid"}
- "za slu≈æby", "za pr√°ci", "za konzultace" = vytvo≈ô polo≈æku slu≈æby s jednotkou "ks"
- V≈ædy vytvo≈ô alespo≈à jednu polo≈æku, i kdy≈æ je popis obecn√Ω

Pokud text neobsahuje fakturu informace, vra≈• v≈°echny hodnoty jako null.`;

export const PRICING_EXTRACTION_SYSTEM_PROMPT = `Analyzuj tento text a extrahuj cenov√© informace pro produkty/slu≈æby.

Vra≈• JSON s:
{
  "items": [
    {
      "productName": "n√°zev produktu/slu≈æby",
      "unitPrice": ƒç√≠seln√° cena za jednotku,
      "unit": "jednotka (ks, kg, hodiny, m, etc.)"
    }
  ]
}

D≈ÆLE≈ΩIT√â PRAVIDLA:
- Rozpoznej "12 000 za 1kg" = unitPrice: 12000, unit: "kg"
- "250kc za 1ks" = unitPrice: 250, unit: "ks"  
- "1200 kc" = unitPrice: 1200
- Zpracov√°vej ƒçesk√© znaky a r≈Øzn√© form√°ty cen
- Rozpoznej produkty: "kvety", "bong", "drticky", "CBD kvƒõt"
- Normalizuj n√°zvy: "kvety" = "CBD kvƒõt", "drticky" = "drtiƒçka"

Pokud text neobsahuje cenov√© informace, vra≈• pr√°zdn√© pole items.`;

export const HELP_RESPONSE = `Jsem v√°≈° inteligentn√≠ AI asistent pro ƒçesk√Ω fakturaƒçn√≠ syst√©m! Jako v√°≈° asistent mohu vytvo≈ôit faktury rychle a efektivnƒõ:

**Vytv√°≈ôen√≠ faktur:**
‚Ä¢ "vytvo≈ô fakturu ABC za slu≈æby 15000 Kƒç"
‚Ä¢ "fakturu XYZ: 5kg produktu A, 3ks produktu B za 25k"

**Vyhled√°v√°n√≠:**
‚Ä¢ "najdi faktury pro z√°kazn√≠ka ABC"
‚Ä¢ "zobraz neplacen√© faktury" 
‚Ä¢ "zaplacen√© faktury za prosinec"

**Navigace:**
‚Ä¢ "p≈ôejdi na z√°kazn√≠ky"
‚Ä¢ "zobraz dashboard"
‚Ä¢ "otev≈ôi nastaven√≠"

**Spr√°va status≈Ø:**
‚Ä¢ "oznaƒç fakturu 20250001 jako zaplacenou"
‚Ä¢ "zmƒõ≈à fakturu na odeslanou"

**Z√°kazn√≠ci a ARES:**
‚Ä¢ Automaticky vyhled√°v√°m v ARES datab√°zi
‚Ä¢ Vytv√°≈ô√≠m nov√© z√°kazn√≠ky s kompletn√≠mi √∫daji

Staƒç√≠ mi napsat, co pot≈ôebujete, a j√° to vy≈ô√≠d√≠m!

**üî• NOV√â! Pokroƒçil√© AI funkce:**
‚Ä¢ "analyzuj moje podnik√°n√≠" - Inteligentn√≠ business insights
‚Ä¢ "riziko z√°kazn√≠ka ABC" - Predikce platebn√≠ch rizik
‚Ä¢ "optimalizuj email kampa≈à" - Email marketing insights
‚Ä¢ "vygeneruj monthly report" - Chytr√° reporty s p≈ôedpovƒõdi
‚Ä¢ "kategorizuj n√°klad" - AI kategorizace n√°klad≈Ø`;

export const AI_TOOLS = [
  {
    type: "function" as const,
    function: {
      name: "create_invoice",
      description: "Vytvo≈ô novou fakturu na z√°kladƒõ poskytnut√Ωch √∫daj≈Ø z p≈ôirozen√©ho textu",
      parameters: {
        type: "object", 
        properties: {
          customerName: {
            type: "string",
            description: "N√°zev z√°kazn√≠ka nebo firmy"
          },
          items: {
            type: "array",
            items: {
              type: "object",
              properties: {
                productName: { type: "string", description: "N√°zev produktu/slu≈æby" },
                quantity: { type: "string", description: "Mno≈æstv√≠ jako string" },
                unit: { type: "string", description: "Jednotka (ks, kg, hodiny, m, etc.)" },
                description: { type: "string", description: "Popis polo≈æky" },
                unitPrice: { type: ["number", "null"], description: "Cena za jednotku" }
              },
              required: ["productName", "quantity", "unit", "description"]
            }
          },
          totalAmount: { type: ["number", "null"], description: "Celkov√° ƒç√°stka" },
          notes: { type: "string", description: "Pozn√°mky k faktu≈ôe" }
        },
        required: ["customerName", "items"]
      }
    }
  },
  {
    type: "function" as const,
    function: {
      name: "add_item_to_invoice",
      description: "P≈ôidej polo≈æku do existuj√≠c√≠ faktury (pouze na str√°nce editace faktury)",
      parameters: {
        type: "object",
        properties: {
          description: { type: "string", description: "Popis polo≈æky" },
          quantity: { type: "string", description: "Mno≈æstv√≠" },
          unit: { type: "string", description: "Jednotka (ks, kg, hodiny, etc.)" },
          unitPrice: { type: "number", description: "Cena za jednotku" },
          vatRate: { type: "string", description: "Sazba DPH v %" }
        },
        required: ["description", "quantity", "unit", "unitPrice"]
      }
    }
  },
  {
    type: "function" as const,
    function: {
      name: "add_note_to_invoice",
      description: "P≈ôidej pozn√°mku k faktu≈ôe",
      parameters: {
        type: "object",
        properties: {
          note: { type: "string", description: "Text pozn√°mky" }
        },
        required: ["note"]
      }
    }
  },
  {
    type: "function" as const,
    function: {
      name: "update_invoice_prices",
      description: "Aktualizuj ceny polo≈æek faktury",
      parameters: {
        type: "object",
        properties: {
          items: {
            type: "array",
            items: {
              type: "object", 
              properties: {
                productName: { type: "string" },
                unitPrice: { type: "number" }
              }
            }
          }
        },
        required: ["items"]
      }
    }
  },
  {
    type: "function" as const,
    function: {
      name: "update_invoice_universal",
      description: "Univerz√°ln√≠ aktualizace faktury (splatnost, pozn√°mky, email, platby, mno≈æstv√≠, status)",
      parameters: {
        type: "object",
        properties: {
          updateType: { type: "string", enum: ["splatnost", "poznamky", "zakaznik", "platba", "mnozstvi", "status"] },
          dueDate: { type: "string", description: "ISO datum pro splatnost" },
          notes: { type: "string", description: "Text pozn√°mky" },
          customer: { type: "object", properties: { email: { type: "string" } } },
          paymentDetails: { type: "object", properties: { bankAccount: { type: "string" }, variableSymbol: { type: "string" } } },
          items: { type: "array", items: { type: "object", properties: { quantity: { type: "string" }, unitPrice: { type: "number" } } } },
          status: { type: "string", enum: ["draft", "sent", "paid"] }
        },
        required: ["updateType"]
      }
    }
  },
  {
    type: "function" as const,
    function: {
      name: "navigate_to_page",
      description: "Naviguj na konkr√©tn√≠ str√°nku aplikace",
      parameters: {
        type: "object",
        properties: {
          path: { type: "string", description: "Cesta nap≈ô. /invoices, /customers, /dashboard" },
          filters: {
            type: "object",
            properties: {
              status: { type: "string", description: "Filtr podle statusu" },
              search: { type: "string", description: "Vyhled√°vac√≠ dotaz" }
            }
          }
        },
        required: ["path"]
      }
    }
  },
  {
    type: "function" as const,
    function: {
      name: "update_invoice_status",
      description: "Zmƒõ≈à stav faktury",
      parameters: {
        type: "object",
        properties: {
          invoiceNumber: { type: "string", description: "ƒå√≠slo faktury" },
          status: { type: "string", enum: ["draft", "sent", "paid", "cancelled"], description: "Nov√Ω stav" }
        },
        required: ["invoiceNumber", "status"]
      }
    }
  },
  {
    type: "function" as const, 
    function: {
      name: "create_expense",
      description: "Vytvo≈ô nov√Ω n√°klad/expense na z√°kladƒõ poskytnut√Ωch √∫daj≈Ø",
      parameters: {
        type: "object",
        properties: {
          supplierName: { type: "string", description: "N√°zev dodavatele" },
          description: { type: "string", description: "Popis n√°kladu" },
          amount: { type: "number", description: "ƒå√°stka bez DPH" },
          vatAmount: { type: "number", description: "V√Ω≈°e DPH" },
          total: { type: "number", description: "Celkov√° ƒç√°stka vƒçetnƒõ DPH" },
          category: { type: "string", description: "Kategorie n√°kladu" },
          expenseDate: { type: "string", description: "Datum n√°kladu ve form√°tu YYYY-MM-DD" },
          receiptNumber: { type: "string", description: "ƒå√≠slo √∫ƒçtenky/dokladu" },
          notes: { type: "string", description: "Pozn√°mky" }
        },
        required: ["description", "total"]
      }
    }
  },
  {
    type: "function" as const,
    function: {
      name: "get_expenses", 
      description: "Zobraz seznam n√°klad≈Ø s mo≈ænost√≠ filtrov√°n√≠",
      parameters: {
        type: "object",
        properties: {
          filters: {
            type: "object",
            properties: {
              category: { type: "string", description: "Kategorie n√°kladu" },
              dateFrom: { type: "string", description: "Datum od" },
              dateTo: { type: "string", description: "Datum do" },
              status: { type: "string", description: "Stav n√°kladu" }
            }
          }
        }
      }
    }
  },
  {
    type: "function" as const,
    function: {
      name: "analyze_business_insights",
      description: "Analyzuj obchodn√≠ data a poskytni inteligentn√≠ insights a p≈ôedpovƒõdi",
      parameters: {
        type: "object",
        properties: {
          analysisType: { 
            type: "string", 
            enum: ["full", "revenue", "customers", "risks"], 
            description: "Typ anal√Ωzy"
          }
        }
      }
    }
  },
  {
    type: "function" as const,
    function: {
      name: "predict_payment_risk",
      description: "Analyzuj platebn√≠ riziko konkr√©tn√≠ho z√°kazn√≠ka",
      parameters: {
        type: "object",
        properties: {
          customerId: { 
            type: "number", 
            description: "ID z√°kazn√≠ka pro anal√Ωzu"
          },
          customerName: { 
            type: "string", 
            description: "N√°zev z√°kazn√≠ka"
          }
        }
      }
    }
  },
  {
    type: "function" as const,
    function: {
      name: "optimize_email_campaign",
      description: "Optimalizuj email kampa≈à pro upom√≠nky a faktury",
      parameters: {
        type: "object",
        properties: {
          campaignType: { 
            type: "string", 
            enum: ["reminders", "invoices", "marketing"], 
            description: "Typ kampanƒõ"
          }
        }
      }
    }
  },
  {
    type: "function" as const, 
    function: {
      name: "generate_smart_report",
      description: "Vygeneruj inteligentn√≠ report s anal√Ωzami a p≈ôedpovƒõdi",
      parameters: {
        type: "object",
        properties: {
          reportType: { 
            type: "string", 
            enum: ["monthly", "quarterly", "annual", "custom"], 
            description: "Typ reportu"
          },
          includeForecasts: { 
            type: "boolean", 
            description: "Zahrnout p≈ôedpovƒõdi", 
            default: true
          }
        }
      }
    }
  },
  {
    type: "function" as const,
    function: {
      name: "smart_expense_categorization", 
      description: "Inteligentnƒõ kategorizuj n√°klady a detekuj duplicity",
      parameters: {
        type: "object",
        properties: {
          expenseDescription: { 
            type: "string", 
            description: "Popis n√°kladu pro kategorizaci"
          },
          supplierName: { 
            type: "string", 
            description: "N√°zev dodavatele"
          }
        }
      }
    }
  },
  {
    type: "function" as const,
    function: {
      name: "provide_help",
      description: "Poskytni n√°povƒõdu a vysvƒõtlen√≠ funkc√≠ syst√©mu",
      parameters: {
        type: "object",
        properties: {
          response: { type: "string", description: "Odpovƒõƒè s n√°povƒõdou" }
        },
        required: ["response"]
      }
    }
  }
];