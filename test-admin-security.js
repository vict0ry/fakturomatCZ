#!/usr/bin/env node

const BASE_URL = 'http://localhost:5000';

async function testAdminSecurity() {
  console.log('üõ°Ô∏è  TESTOV√ÅN√ç ADMIN BEZPEƒåNOSTI');
  console.log('================================\n');

  // Test 1: P≈ô√≠stup na /admin bez p≈ôihl√°≈°en√≠
  console.log('1Ô∏è‚É£ Test p≈ô√≠stupu na admin panel bez p≈ôihl√°≈°en√≠');
  try {
    const response = await fetch(`${BASE_URL}/admin`);
    console.log(`Status: ${response.status}`);
    
    if (response.status === 200) {
      console.log('‚ùå BEZPEƒåNOSTN√ç RIZIKO - Admin panel je p≈ô√≠stupn√Ω bez p≈ôihl√°≈°en√≠!');
    } else {
      console.log('‚úÖ Spr√°vnƒõ blokov√°no - Admin panel vy≈æaduje p≈ôihl√°≈°en√≠');
    }
  } catch (error) {
    console.log('‚ùå ERROR:', error.message);
  }

  console.log();

  // Test 2: API endpointy bez autentifikace
  console.log('2Ô∏è‚É£ Test admin API endpoint≈Ø bez autentifikace');
  
  const adminEndpoints = [
    '/api/admin/users/stats',
    '/api/admin/revenue/stats', 
    '/api/admin/system/health',
    '/api/admin/users/recent'
  ];

  for (const endpoint of adminEndpoints) {
    try {
      const response = await fetch(`${BASE_URL}${endpoint}`);
      
      if (response.status === 401 || response.status === 403) {
        console.log(`‚úÖ ${endpoint} - Spr√°vnƒõ zabezpeƒçeno (${response.status})`);
      } else {
        console.log(`‚ùå ${endpoint} - BEZPEƒåNOSTN√ç RIZIKO (${response.status})`);
      }
    } catch (error) {
      console.log(`‚ùå ${endpoint} - ERROR: ${error.message}`);
    }
  }

  console.log();

  // Test 3: Admin p≈ôihl√°≈°en√≠
  console.log('3Ô∏è‚É£ Test admin p≈ôihl√°≈°en√≠');
  try {
    const loginResponse = await fetch(`${BASE_URL}/api/auth/login`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        username: 'admin@doklad.ai',
        password: 'admin123'
      })
    });

    if (loginResponse.ok) {
      const loginData = await loginResponse.json();
      console.log('‚úÖ Admin p≈ôihl√°≈°en√≠ √∫spƒõ≈°n√©');
      console.log(`   SessionId: ${loginData.sessionId}`);
      console.log(`   Role: ${loginData.user.role}`);
      
      // Test 4: P≈ô√≠stup k admin API s autentifikac√≠
      console.log('\n4Ô∏è‚É£ Test admin API s autentifikac√≠');
      
      for (const endpoint of adminEndpoints) {
        try {
          const response = await fetch(`${BASE_URL}${endpoint}`, {
            headers: {
              'Authorization': `Bearer ${loginData.sessionId}`
            }
          });
          
          if (response.ok) {
            console.log(`‚úÖ ${endpoint} - √öspƒõ≈°n√Ω p≈ô√≠stup s autentifikac√≠`);
          } else {
            console.log(`‚ùå ${endpoint} - St√°le blokov√°no i s autentifikac√≠ (${response.status})`);
          }
        } catch (error) {
          console.log(`‚ùå ${endpoint} - ERROR: ${error.message}`);
        }
      }
      
    } else {
      console.log('‚ùå Admin p≈ôihl√°≈°en√≠ selhalo');
    }
  } catch (error) {
    console.log('‚ùå ERROR p≈ôi admin p≈ôihl√°≈°en√≠:', error.message);
  }

  console.log('\n================================');
  console.log('üìä BEZPEƒåNOSTN√ç AUDIT DOKONƒåEN');
  console.log('================================');
}

testAdminSecurity().catch(console.error);